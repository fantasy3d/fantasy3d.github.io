import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e}from"./app-B84DVLuZ.js";const t={},p=e(`<p><a href="/api/classes/core_src.Scene.html">Scene</a> 作为场景单元，负责组织管理实体树，<a href="/api/classes/core_src.SceneRenderer.html">SceneRenderer</a> 场景渲染器，负责场景的具体渲染。</p><p>我们可以同时激活一个或多个场景，也可以通过控制逻辑动态切换激活的场景。不同场景的实实体、组件之间是相互隔离，互不影响。</p><h2 id="创建场景" tabindex="-1"><a class="header-anchor" href="#创建场景" aria-hidden="true">#</a> 创建场景</h2><ul><li>创建场景</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Scene <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@fantasy3d/core&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 创建场景</span>
<span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span> engine <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Scene 初始化参数详见 <a href="/api/interfaces/core_src.SceneOptions.html">SceneOptions</a>。</p></div><ul><li>设置场景渲染器</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SceneRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@fantasy3d/core&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 创建场景渲染器</span>
<span class="token keyword">const</span> sceneRenderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SceneRenderer</span><span class="token punctuation">(</span> engine <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 为场景设置渲染器</span>
scene<span class="token punctuation">.</span>sceneRenderer <span class="token operator">=</span> sceneRenderer<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>场景渲染器可以被多个场景共用，不要重复相同类型场景渲染器！除非不同场景使用不同类型渲染器。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SceneRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@fantasy3d/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> EffectRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@fantasy3d/postprocessing&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 创建默认场景渲染器</span>
<span class="token keyword">const</span> sceneRenderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SceneRenderer</span><span class="token punctuation">(</span> engine <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建后处理场景渲染器</span>
<span class="token keyword">const</span> effectRenderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EffectRenderer</span><span class="token punctuation">(</span> engine <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Scene1和Scene2使用相同的场景渲染器</span>
scene1<span class="token punctuation">.</span>sceneRenderer <span class="token operator">=</span> sceneRenderer<span class="token punctuation">;</span>
scene2<span class="token punctuation">.</span>sceneRenderer <span class="token operator">=</span> sceneRenderer<span class="token punctuation">;</span>

<span class="token comment">// Scene3使用后处理场景渲染器</span>
scene3<span class="token punctuation">.</span>sceneRenderer <span class="token operator">=</span> effectRenderer<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Fantasy 3D 目前提供 <a href="/api/classes/core_src.SceneRenderer.html">SceneRenderer</a> 和 <a href="/api/classes/postprocessing_src.EffectRenderer.html">EffectRenderer</a> 两种类型场景渲染器。此外，我们也可以根据实际需求开发定制场景渲染器。</p></div><ul><li>创建相机</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Vector3<span class="token punctuation">,</span> Vector4 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 创建一个透视相机</span>
<span class="token keyword">const</span> camera <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">createPerspectiveCamera</span><span class="token punctuation">(</span> <span class="token punctuation">{</span>

  <span class="token comment">// 相机实体方位属性</span>
  transform<span class="token operator">:</span> <span class="token punctuation">{</span>

    position<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Vector3</span><span class="token punctuation">(</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
    lookAt<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Vector3</span><span class="token punctuation">(</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span> <span class="token punctuation">)</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 相机属性</span>
  camera<span class="token operator">:</span> <span class="token punctuation">{</span> 
    
    near<span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>                          <span class="token comment">// 近裁剪面距离</span>
    far<span class="token operator">:</span> <span class="token number">1000.0</span><span class="token punctuation">,</span>                        <span class="token comment">// 远裁剪面距离</span>
    viewport<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Vector3</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token comment">// 相机渲染视口范围（NDC空间），xy视口左上角坐标，zw视口宽高</span>
  
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>一个场景可以拥有多个激活相机，可以通过 &quot;viewport&quot; 参数设置相机的渲染视口。</p></div><ul><li>激活场景</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 激活场景</span>
scene<span class="token punctuation">.</span>isActive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>一个场景只有被激活且至少存在一个激活相机才会被渲染！</p></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><ul><li><p><a href="/api/classes/core_src.Scene.html#isActive">isActive</a> - 场景是否激活，读写属性。</p></li><li><p><a href="/api/classes/core_src.Scene.html#native">native</a> - 获取three.js原生场景对象（<a href="https://threejs.org/docs/index.html?q=Scene#api/en/scenes/Scene">Scene</a>），只读属性。</p></li><li><p><a href="/api/classes/core_src.Scene.html#rootEntity">rootEntity</a> - 获取场景根实体，只读属性。</p></li><li><p><a href="/api/classes/core_src.Scene.html#activeCameras">activeCameras</a> - 获取场景激活的相机，只读属性。</p></li><li><p><a href="/api/classes/core_src.Scene.html#background">background</a> - 设置场景背景，只写属性。</p></li><li><p><a href="/api/classes/core_src.Scene.html#backgroundBlurriness">backgroundBlurriness</a> - 设置场景背景模糊度，只写属性。</p></li><li><p><a href="/api/classes/core_src.Scene.html#backgroundIntensity">backgroundIntensity</a> - 设置场景背景强度，只写属性。</p></li></ul><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><ul><li><a href="/api/classes/core_src.Scene.html#createOrthographicCamera">createOrthographicCamera</a> - 创建正交相机。</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Vector3 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 创建正交相机</span>
<span class="token keyword">const</span> camera <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">createOrthographicCamera</span><span class="token punctuation">(</span> <span class="token punctuation">{</span>

  transform<span class="token operator">:</span> <span class="token punctuation">{</span> position<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Vector3</span><span class="token punctuation">(</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">10.0</span><span class="token punctuation">,</span> <span class="token number">40.0</span> <span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  camera<span class="token operator">:</span> <span class="token punctuation">{</span>

    near<span class="token operator">:</span> <span class="token number">10.0</span><span class="token punctuation">,</span>
    far<span class="token operator">:</span> <span class="token number">150.0</span><span class="token punctuation">,</span>
    frustum<span class="token operator">:</span> <span class="token number">50.0</span>

  <span class="token punctuation">}</span>

<span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><a href="/api/classes/core_src.Scene.html#createPerspectiveCamera">createPerspectiveCamera</a> - 创建透视相机。</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Vector3 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 创建投射相机</span>
<span class="token keyword">const</span> camera <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">createPerspectiveCamera</span><span class="token punctuation">(</span> <span class="token punctuation">{</span>

  transform<span class="token operator">:</span> <span class="token punctuation">{</span>

    position<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Vector3</span><span class="token punctuation">(</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
    lookAt<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Vector3</span><span class="token punctuation">(</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span> <span class="token punctuation">)</span>

  <span class="token punctuation">}</span>

  camera<span class="token operator">:</span> <span class="token punctuation">{</span>

    near<span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>
    far<span class="token operator">:</span> <span class="token number">500.0</span>

  <span class="token punctuation">}</span>

<span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><a href="/api/classes/core_src.Scene.html#render">render</a> - 渲染场景。</p></li><li><p><a href="/api/classes/core_src.Scene.html#dispose">dipose</a> - 释放场景。</p></li></ul><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><ul><li><a href="/api/classes/core_src.Scene.html#on">on</a> - 订阅事件。</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> EventType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@fantasy3d/core&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 订阅“场景开始渲染”事件</span>
scene<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span> EventType<span class="token punctuation">.</span><span class="token constant">BEFORE_SCENE_RENDER</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token comment">// TODO:事件响应</span>

<span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><a href="/api/classes/core_src.Scene.html#once">once</a> - 订阅事件且仅响应一次。</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> EventType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@fantasy3d/core&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 订阅一次“场景开始渲染”事件</span>
scene<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span> EventType<span class="token punctuation">.</span><span class="token constant">BEFORE_SCENE_RENDER</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token comment">// TODO:事件响应</span>

<span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><a href="/api/classes/core_src.Scene.html#off">off</a> - 取消事件订阅。</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> EventType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@fantasy3d/core&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// “场景开始渲染”事件订阅回调</span>
<span class="token keyword">const</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 订阅“场景开始渲染”事件</span>
scene<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span> EventType<span class="token punctuation">.</span><span class="token constant">BEFORE_SCENE_RENDER</span><span class="token punctuation">,</span> callback<span class="token punctuation">,</span> <span class="token punctuation">{</span> target<span class="token operator">:</span> <span class="token keyword">this</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 取消订阅“场景开始渲染”事件</span>
scene<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span> EventType<span class="token punctuation">.</span><span class="token constant">BEFORE_SCENE_RENDER</span><span class="token punctuation">,</span> callback <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>“取消订阅”时如果不设置第二个参数，会取消该类型事件的所有订阅！</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 取消“场景开始渲染”事件的所有订阅</span>
scene<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span> EventType<span class="token punctuation">.</span><span class="token constant">BEFORE_SCENE_RENDER</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><ul><li><a href="/api/classes/core_src.Scene.html#emit">emit</a> - 分发事件。</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> EventType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@fantasy3d/core&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 分发“场景开始渲染”事件</span>
scene<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> EventType<span class="token punctuation">.</span><span class="token constant">BEFORE_FRAME_LOOP</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>内置事件</li></ul><table><thead><tr><th style="text-align:left;">事件类型</th><th style="text-align:left;">事件说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>BEFORE_SCENE_RENDER</strong></td><td style="text-align:left;">场景开始渲染事件，单个场景渲染之前触发</td></tr><tr><td style="text-align:left;"><strong>AFTER_SCENE_RENDER</strong></td><td style="text-align:left;">场景结束渲染事件，单个场景渲染之后触发</td></tr><tr><td style="text-align:left;"><strong>BEFORE_CAMERA_DEPTH_RENDER</strong></td><td style="text-align:left;">相机深度开始渲染事件，相机深度渲染之前触发</td></tr><tr><td style="text-align:left;"><strong>AFTER_CAMERA_DEPTH_RENDER</strong></td><td style="text-align:left;">相机深度结束渲染事件，相机深度渲染之后触发</td></tr><tr><td style="text-align:left;"><strong>BEFORE_CAMERA_RENDER</strong></td><td style="text-align:left;">相机开始渲染事件，相机渲染之前触发</td></tr><tr><td style="text-align:left;"><strong>AFTER_CAMERA_RENDER</strong></td><td style="text-align:left;">相机结束渲染事件，相机渲染之后触发</td></tr></tbody></table>`,36),c=[p];function o(i,l){return s(),a("div",null,c)}const d=n(t,[["render",o],["__file","scene.html.vue"]]);export{d as default};
